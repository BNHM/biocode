#!/usr/bin/perl


# biocode_query Jan 2004  (using mysql)

# $DEBUG = 1;

use Spreadsheet::WriteExcel;

require "myschema.p";
require "utils.p";
require "myquery_utils.p"; 
require "mybiocode_utils.p";
require "myimg_utils.p";
require "biocode_settings";


## uncomment for system crashes
# $CRASH = 1;  ## queries will just exit out of readParse
$crash_date = "Fri Oct  8 10:15:08 PDT 2004";

#$imageURL = "http://calphotos.berkeley.edu/cgi/img_query";
$imageURL = "/cgi/biocode_img_query";

$latlong = 0;
$orig_in = $ENV{'QUERY_STRING'};
$stat = "";

$tmp_dir =  "$tmp_file_location/biocode_query";


### begin

&readParse(*input) || print "    <p>No input data processed.<p>\n";
&parse_input;

#$max_rows = 100;
$table = "biocode";
$script_name = "biocode_query";
$heading = "Biocode Specimens";

$download_on = $input{downloadfile};    # turn this on to enable download of results
$biocode_excel_file = "";

# check for password coming in for public access
if ($DEBUG) {$debug_msg .= "<h4>ACCESS: $input{pub_access_name} :: $input{pub_access_pwd}</h4>";}
if ($input{OK2SHOWPRIVATE} == 1) {
    $OK2SHOWPRIVATE = 1;
} elsif ($input{pub_access_pwd}) {
    $OK2SHOWPRIVATE = &check_biocode_name_and_password2($input{pub_access_name},$input{pub_access_pwd});
}

if ($DEBUG) {$debug_msg .= "<h4>OK2SHOWPRIVATE: $OK2SHOWPRIVATE</h4><h4>BAD_MSG: $bad_msg</h4>";}

if($input{only} eq "photos") {
    $displaylist = "photos";
}elsif($input{only} eq "species") {
    $displaylist = "species";
}
if($input{stat} eq "ADVANCED") {
    $ADVANCED = 1;
}


############## advanced form ##############


if ($input{"advanced"} eq "T") { ## check for this in do_regular_query   # what the fuck? this never seems to be set anywhere?
    $ADVANCED = 1;
    $button_flag = "ADVANCED";
    if ($DEBUG) {$debug_msg .= "<h4>In biocode_query: Got advanced query ... </h4>";}
} 

if ($DEBUG) {
    $debug_msg .= "<h4>In biocode_query: ADVANCED=|$ADVANCED| displaylist=|$displaylist| ... </h4>";
}
    

if ($ADVANCED) {


    if (!$displaylist) {

        @displaylist = @biocode_simple_display_schema;

        foreach $l (@displaylist) {
            $displaylist .= "$l,";
        }
        $displaylist =~ s/\,$//g;


        $selectlist = "";
        foreach $e (@biocode_simple_display_join_schema) {
            $selectlist .= "$e, ";
        }
        $selectlist =~ s/,\s*$//g;


    } elsif ($displaylist eq "species") {

        $displaylist = "";
        @displaylist = @biocode_species_display_schema;
        foreach $l (@displaylist) {
            $displaylist .= "$l,";
        }
        $displaylist =~ s/\,$//g;
        $selectlist = $displaylist;
        $selectlist =~ s/\|/\,/g;

    } else {  ## random fields were picked - not default and not all
        if ($DEBUG) {$debug_msg .= "<h4>In biocode_query: making displaylist ... </h4>";}
        @displaylist = split(/\|/,$displaylist);
        if ($DEBUG) {$debug_msg .= "displaylist: @displaylist";}
        $displaylist = "";
        foreach $l (@displaylist) {
            $displaylist .= "$biocode_ugly{$l},";
        }
        $displaylist =~ s/\,$//g;

        ## special case: add precision if we're selecting coll_date
        if ($displaylist =~ /coll_date/) {
            $displaylist .= ",coll_date_prec";
        }
    }
    
    if($input{only} eq "species") {
        $displaylist =~ s/^\s*,//g;
        $selectlist = "distinct $displaylist";
        if($orderby =~ /CatalogNumberNumeric/ || $orderby =~ /Collector/ || $orderby =~ /StateProvince/) {
            # otherwise it sorts by MBIO number, which makes species list not unique...
            $orderby = "Phylum|Class|Subclass|Ordr|Suborder|Family|Subfamily|Tribe|Subgenus|ScientificName"; 
        }
    }


    ## always select pic 
    if($input{only} ne "species") {
         $selectlist .= ",biocode.pic";
    }

#print "HELLO THREE<p>";
#print "selectlist: $selectlist <p>";

# not advanced 

} elsif ($prevselect) {  ## tmp file -- get selectlist from button
    $displaylist = $prevselect;
    $selectlist = $prevselect;

} else {  

    $table = $input{table};
    if ($table eq "biocode") {
        $selectlist = &get_simple_selectlist;
    }
}

## add a field to the default displaylist

if ($input{add2select}) {
    $selectlist .= ",$input{add2select}";
    $displaylist .= ",$input{add2select}";
}

if (!$max) {
#    $max = 100;
}

if ($input{"download"}) {   

    $displaylist = $input{'displaylist'};
    if($input{downloadformat} ne "Biocode Excel Bulk Upload") {
        &download_biocode_file($input{download},$input{downloadformat});
    }
					   
} elsif ($input{"one"} eq "T") {
    &one_record_query;
    if ($bad_args_for_one_record_query) {
        &print_biocode_header_css($page_heading);
        print "<p><h3>Sorry, I don't understand that query.  Please try again</h3>";
        &print_biocode_footer;
        return;
    } else {
        $stat = "DETAIL";  # for query statistics
        &print_detail;
    }


} elsif ($input{"tmpfile"} eq "") {   # this is not a next or prev page
    

    if ($input{"special"} eq "browse_fam") { ## browselist
        $selectlist = "Family";
        $orderby = "Family";
        $groupby = "Family";
        $class = $input{"where-Class"};
        $order = $input{"where-Ordr"};

    } elsif ($input{"special"} eq "browse_sciname") { ## browselist
        $selectlist = "ScientificName";
        $orderby = "ScientificName";
        $groupby = "ScientificName";
        $class = $input{"where-Class"};
        $order = $input{"where-Ordr"};
        $family = $input{"where-Family"};
    }

    if (!$table) {
        $table = "biocode"; 
    }
    ## make sure we have a selectlist
    if (!$selectlist) {
        if ($table eq "biocode") {
            $selectlist = &get_simple_selectlist;
        }
    }
    if ($DEBUG) {$debug_msg .= "<h4>biocode_query</h4> calling build_query.  table: $table selectlist: $selectlist<p>";}

    &build_query;  # query_utils.p

    $query = &adjust_query($query);
    &do_regular_query;

} elsif ($input{"tmpfile"} ne "") {  # next or prev page
    &use_tmp_file;
}

&make_log_entry("biocode",$whereclause,$stat);  # stat = DETAIL or DOWNLOAD

### end

sub do_regular_query {

    my $matches = 0;

    &print_biocode_header_css($heading);

    # print "Content-type: text/html\n\n";
    # print "QUERY: $query<p>";

    if (!$whereclause || $whereclause !~ /^WHERE/) {
        $whereclause = "nothing selected";
        $num_matches = 0;
        print "<p><h3>Error: Please go back and select at least one field to query on.</h3>"; 
        if ($DEBUG) {
            print "<p>DEBUG_MSG<p>$debug_msg;";
        }
        &print_biocode_footer;
        return;
 
    }
    $tmp = &get_multiple_records($query,"biocode");  # query_utils.p

    if ($DEBUG) {$debug_msg .= "made tmp file tmp=$tmp ...\n";}

    if ($DEBUG) {$debug_msg .=  "calling check_max ...\n";}
        &check_max;  # query_utils.p
    if ($default_max) {
        $max_rows = 59;
    }    

    $matches = $num_matches;    # @^$!@#$ global variables that shouldn't be

    if ($num_matches eq 0) {
        print "<h4>Sorry - no matches. Please try again.</h4>";
        print "<small><b>Query:</b> $query</small><br>\n";
        if ($DEBUG) {
            print "<p>DEBUG_MSG<p>$debug_msg;";
        }
        &print_biocode_footer;
        return;    
    }


    if($download_on) {
        &do_download_query($input{downloadformat});    # downloadformat: which fields to download, in what format (tab delimited vs Excel; MVZ vs general)
    }

    $num_matches = $matches;  # @^$!@#$ global variables that shouldn't be

    # print "<small><b>Query:</b> $query</small><br>\n";

    $query_results = $tmp;

    if ($DEBUG) {$debug_msg .=  "calling print_multiple_records ...\n";}
    if ($DEBUG) {$debug_msg .=  "<br>query_results: $query_results";}
    if ($input{'advanced'} eq "T") {
        &print_advanced_records;

    } elsif ($input{'special'} eq "browse_fam") {  ## /biocode/browse.html
        &print_grouped_by_family;

    } elsif ($input{'special'} eq "browse_sciname") {  ## /biocode/browse.html
        &print_grouped_by_sciname;

    } elsif ($input{'only'} eq "species") {  ## print unique species list only
        &print_species_list;

    } else {
        &print_multiple_records;
    }
}


sub adjust_query {   # added March 18, 2010 ... limitations in myquery_utils.p for joins!!!     :(
    my ($query) = @_;

    $query =~ s/FROM biocode_collecting_event ,biocode/FROM biocode_collecting_event, \(biocode left join biocode_tissue on biocode_tissue.bnhm_id = biocode.bnhm_id\) /g;
    if($query !~ /group by/i) {
        $query =~ s/ ORDER BY / group by  biocode.bnhm_id ORDER BY /g;
    }
   
    if($query !~ /ORDER BY/i) { # these 3 lines added Jan 21, 2011
        $query .= " group by biocode.bnhm_id ORDER BY CatalogNumberNumeric ";
    }

    if(!$OK2SHOWPRIVATE) {
        $query =~ s/where /where biocode.PublicAccess is NULL and /i;
    }

    $query =~ s/ ,biocode_tissue / /g;

    return $query;

}

sub use_tmp_file {

    if ($DEBUG) {$debug_msg .= "<p>In use_tmp_file<p>\n";}

    $whereclause = $input{'prevwhere'};
    &print_biocode_header_css($heading);

    &check_max; # query_utils.p
    $query_results = "$tmp_file_location/biocode_query/$input{'tmpfile'}";
    $download_tmp = "$tmp_file_location/biocode_query/$download_tmp";

    if ($DEBUG) {$debug_msg .=  "<h4>query_results: $query_results</h4>>\n";}
    if ($input{'button_flag'} eq "ADVANCED") {
        &print_advanced_records;
    } elsif ($input{'only'} eq "species") {  ## print unique species list only
        &print_species_list;

    } else {
        &print_multiple_records;
    }
}


sub print_multiple_records {
    
    $some_pics=0;
    if ($DEBUG) {$debug_msg .= "<h4>In print_multiple_records</h4>";}
    &print_table_cells;

    print "</table>\n";
    
    if ($some_private_records) {
        if ($OK2SHOWPRIVATE) {
            print "<big>**</big> record is not available to the public<p>\n";
        } else {
            print "<p><b>Note</b>: $private_count records in the result set have not been displayed ";
            print "because they aren't publicly available.";
        }
    }
    if ($DEBUG) {
        print "<p>DEBUG_MSG<p>$debug_msg;";
    }
    &print_biocode_footer;
}


sub print_grouped_by_family {

    ## called above -  if($input{"special"} eq "browse_fam")

    print "Click on Family to see a list of species within that family.<p>";
    print "<table align=center cellspacing=8>";
    print "<tr><td colspan=2>";
    print "Order &nbsp;<b>$order</b></td></tr>\n";
    print "<tr><td colspan=2><hr></td></tr>\n";

    print "<TR>";
    
    print "<th align=left><small>Family</small></th>\n";
    print "<th align=left><small>count</small></th>\n";

    open(FH, "$query_results") || die "Can't open tmp file for reading";
    local($count) = 0;
    while(<FH>) {
        print "<tr>";
        @row = split(/\t/,$_);
        $rowcount = $row[0];  ## myquery_utils does count first on groupby
        $family = $row[1];


        $fam_url = "/cgi/biocode_query?stat=BROWSE&special=browse_sciname&add2select=Ordr|Class&where-Ordr=$order&where-Class=$class&where-PublicAcess=null";
        if (!$family || $family =~ /^ *$/) {
            $show_fam = "<i>not available</i>";
            $fam_url .= "&where-Family=null";
        } else {
            $show_fam = $family;
            $fam_url .= "&where-Family=$family";
        }
        # print "<td>$order<br></td>\n";
        print "<td><a href=$fam_url>$show_fam</a><br></td>\n";
        print "<td align=center>$rowcount<br></td>\n";
        print "</tr>";
    }
    close(FH);
    print "</table>\n";
    &print_biocode_footer;
}    

sub print_grouped_by_sciname {

    ## called above -  if($input{"special"} eq "browse_sciname")

    # print "<p><small><b>Query:</b> $query</small><br><p>\n";

    $join = "jointables=biocode_collecting_event,biocode&joincolumns=biocode.Coll_EventID+=+biocode_collecting_event.EventID";

    print "Click on Scientific Name to see specimen records for that name.<p>";

    print "<table align=center cellspacing=8>";

    
    print "<tr><td colspan=2>";
    print "Order &nbsp;<b>$order</b>&nbsp;&nbsp;&nbsp;&nbsp;";
    print "Family &nbsp;<b>$family</b></td></tr>\n";
    print "<tr><td colspan=2><hr></td></tr>\n";

    print "<TR>";
    print "<th align=left><small>Scientific Name</small></th>\n";
    print "<th align=left><small>Count</small></th>\n";

    open(FH, "$query_results") || die "Can't open tmp file for reading";
    local($count) = 0;
    while(<FH>) {
        print "<tr>";
        @row = split(/\t/,$_);

        $sciname = $row[1];  ## myquery_utils does count first on groupby
        $rowcount = $row[0];

        $sciname_u = $sciname;
        $sciname_u =~ s/ /\+/g;
        $sciname_url = "/cgi/biocode_query?stat=BROWSE&where-biocode.Class=$class&where-biocode.Ordr=$order&where-biocode.Family=$family&where-biocode.PublicAcess=null&$join";

        if (!$sciname || $sciname =~ /^ *$/) {
            $show_sciname = "<i>not available</i>";
            $sciname_url .= "&where-biocode.ScientificName=null";
        } else {
            $show_sciname = $sciname;
            $sciname_url .= "&where-biocode.ScientificName=$sciname_u";
        }

        print "<td><a href=$sciname_url>$show_sciname</a><br></td>\n";
	
        print "<td align=center>$rowcount<br></td>\n";
        print "</tr>";
    }
    close(FH);
    print "</table>\n";
    &print_biocode_footer;
}    

sub print_table_cells {

    $searchstring = $whereclause;

    ## stuff for download button
    $dwhere = &strip($searchstring);
    $dwhere =~ s/\"//g;  # county="county=San Diego" ->county=San Diego
    $dwhere =~ s/ /\+/g;

# HERE
    if ($download_on) {
        $url_downloadformat = $input{downloadformat};
        $url_downloadformat =~ s/\s/\+/g;

        if($input{downloadformat} eq "Biocode Excel Bulk Upload") {
            $filesize = sprintf("%.1f",(-s $biocode_excel_file) / 1000);
            print "<p><li><a href=/tmpfiles/$biocode_excel_file>Download these specimen records</a> (Excel file, $num_matches rows, file size = $filesize K)<p>";

        } elsif($input{downloadformat} eq "SI-EMU (Excel)") {
            $filesize = sprintf("%.1f",(-s $biocode_excel_file) / 1000);
            print "<p><li><a href=/tmpfiles/$biocode_excel_file>Download these specimen records</a> (SI-EMU formatted Excel file, $num_matches rows, file size = $filesize K)<p>";

        } else {
            $filesize = sprintf("%.1f",(-s $download_tmp) / 1000);
            print "<p><li>Download: <a href=/cgi/biocode_query?download=$download_tmp&downloadformat=$url_downloadformat";
            print "&table=biocode&num=$num_matches&whereclause=$dwhere&stat=DOWNLOAD>Specimen records</a> ";
            print " (tab-delimited text file, $num_matches lines, file size = $filesize K) ";

            $filesize = sprintf("%.1f",(-s $tissue_tmp) / 1000);
            $num_tissues = `wc -l $tissue_tmp`;
            $num_tissues =~ s/\s+[_\d]+\.txt$//g;
            if($filesize > 0) {
                print "[<a href=/tmpfiles/$tissue_tmp>Tissue records</a> ";
                print " (tab-delimited text file, $num_tissues lines, file size = $filesize K)]<p>";
            }
        }
    }
    $bnhm_mapper_url = &get_bnhm_mapper_url;

    print "<li><a href=$bnhm_mapper_url target=viewer_window>View a Map</a> of the georeferenced records below ";
    print "(via <i><a href=http://berkeleymapper.berkeley.edu/>BerkeleyMapper</a></i>)\n";

    $query_to_display = "SELECT FROM biocode $whereclause $groupclause $orderclause"; # 5/23/05
    print "<p><small><b>Query:</b> $query_to_display</small><br><p>\n"; 

    
    print "<p><small><i>Click on Biocode No. to see ";
    print "the full specimen record</i></small><br>\n";
    print "<table border>";
    print "<TR>";
    print "<th><small>Biocode No.</th>\n";
    print "<th><small>Specimen No.</th>\n";
    print "<th><small>Scientific Name</th>\n";
    print "<th><small>Family</th>\n";
    print "<th><small>Order</th>\n";
    print "<th><small>Class</th>\n";
    print "<th><small>Phylum</th>\n";
    print "<th><small>Kingdom</th>\n";
    print "<th><small>Collector</th>\n";
    print "<th><small>Year</th>\n";
    print "<th><small>Event ID</th>\n";

    open(FH, "$query_results") || die "Can't open tmp file for reading";
    local($count) = 0;
    $private_count = 0;

    while(<FH>) {
	
        if(($count < ($row_to_start + $max_rows)) && ($count >= $row_to_start)) {

            $line = $_;
            chomp($line);
            @row = split(/\t/,$line);
            &fill_fields_with_values("biocode_simple_display");
            chomp($Genus);
            chomp($SpecificEpithet);
            chomp($SubpecificEpithet);
            $Genus = &strip($Genus);
            $SpecificEpithet = &strip($SpecificEpithet);
            $SubpecificEpithet = &strip($SubspecificEpithet);

            if ($PublicAccess eq "no") {
                $some_private_records = 1;
                if ($OK2SHOWPRIVATE) {
                    # proceed
                } else {
                    $private_count++;
                    next;
                }
            }

            $sciname_url = $ScientificName;
            $sciname_url =~ s/ /\+/g;
            # $sciname_query = "/cgi/biocode_species_query?genus=$Genus&species=$SpecificEpithet&subspecies=$SubspecificEpithet&step=detail";
            $sciname_query = "/cgi/biocode_species_query?bnhm_id=$bnhm_id&step=detail";  # changed July 2010


            print "<tr>";

            print "<td><a href=/cgi/biocode_query?table=biocode&bnhm_id=$bnhm_id&one=T&OK2SHOWPRIVATE=$OK2SHOWPRIVATE>";
            print "<small>$bnhm_id</small></a>";
            if ($pic == 1) {
                #print "&nbsp;<big>*</big> ";
                print "&nbsp;<img src=/graphics/camera_small.gif border=0>\n";
                $some_pics=1;
            }
            print "<br></td>\n";

            print "<td align=center>$Specimen_Num_Collector</a>";
            print "<br></td>\n";

            print "<td>\n";
            if($ScientificName) {
                # print "<a href=\"$sciname_query\">$ScientificName</a>";
                print "<a href=\"$sciname_query\">$Genus $Taxon_Certainty $SpecificEpithet $SubspecificEpithet</a>";   # changed Feb 28, 2012
                if ($PublicAccess eq "no") {
                    print " **";
                }
            } elsif(!$ScientificName && !$Family && !$Ordr) {
                if(!$Class && !$Phylum) {
                    if($LowestTaxon) {
                        print "<font color=grey>[$LowestTaxon]</font>";
                    }
                } elsif(!$Class) {
                    print "<font color=grey>[$Phylum]</font>";
                } else {
                    print "<font color=grey>[$Phylum: $Class]</font>";
                }
            }

            print "<br></td>\n";
    	    print "<td>$Family<br></td>\n";
            print "<td>$Ordr<br></td>\n";
            print "<td>$Class<br></td>\n";
            print "<td>$Phylum<br></td>\n";
            print "<td>$Kingdom<br></td>\n";
	    
            ## Collectors
            $coll_query = "/cgi/biocode_people_query?table=biocode_people&one=T&name_full";
            @Collecters = split(/\,/,$Collector_List);
            $coll_list = "";
            print "<td>";
            foreach $c (@Collecters) {
                $c_url = &strip($c);
                $c_url =~ s/ /\+/g;
                $coll_list .= "<nobr><a href=$coll_query=$c_url>$c</a></nobr> & \n";
            }
            $coll_list =~ s/\& $//g;
            print "$coll_list<br></td>\n";
            print "<td>$YearCollected<br></td>\n";

            print "<td align=center><a href=/cgi/biocode_collect_event_query?EventID=$Coll_EventID&one=T>$Coll_EventID</a><br></td>\n";
        }

    print "</tr>";
    $count++;
    }
    close(FH);
}


sub one_record_query {

    ## query biocode table

    my $selectlist = "";

    ## from the prelim results page
    if ($input{'bnhm_id'}) {
        $bnhm_id = $input{'bnhm_id'};
        $whereclause = "WHERE bnhm_id = '$bnhm_id'";

    } elsif ($input{'seq_num'}) {
        $seq_num = $input{'seq_num'};
        $whereclause = "WHERE biocode.seq_num='$seq_num'";

    } elsif ($input{'Specimen_Num_Collector'}) {
        $Specimen_Num_Collector = $input{'Specimen_Num_Collector'};
        $whereclause = "WHERE Specimen_Num_Collector='$Specimen_Num_Collector'";

    } else {
        $bad_args_for_one_record_query = 1;
        return;
    }

    $whereclause .= " and biocode.Coll_EventID = biocode_collecting_event.EventID ";

    foreach my $f (@biocode_specimen_and_collevent_schema) {
        $selectlist .= "$f, ";
    }

    $selectlist =~ s/\,\s*$//g;

    $query = "select $selectlist from biocode, biocode_collecting_event $whereclause";
    if ($DEBUG) {$debug_msg .= "query: $query<p>\n";}

#print "Content-type: text/html\n\n";
#print "QUERY: $query<p>";

    @row = &get_one_record($query,"biocode");
    # save it for later
    @row2clone = @row;

    local($count) = 0;
    # foreach $attr (@biocode_schema) {
    foreach $attr (@biocode_specimen_and_collevent_schema) {
        if($attr =~ /\./) {
            $attr = $';
        }
        $val{$attr} = $row[$count];
        $count++;
    }


}


# tabs fixed down to here .. JG 8/22/2008   !#$!$%#$%^   it was the vi setting in the .bashrc file ....


sub print_detail {
    
    if ($DEBUG) {$debug_msg .= "<h4>In print_detail<\h4>\n";}
    &clear_all_fields("biocode_specimen_and_collevent");
    &fill_fields_with_values("biocode_specimen_and_collevent");

    if ($PublicAccess eq "no") {
	if ($OK2SHOWPRIVATE) {
	    $OK2SHOWPRIVATE = 1;
	} else {
	    $OK2SHOWPRIVATE = 0;
	} 
    } else {
	$OK2SHOWPRIVATE = 1;
    }
	    
    if ($Specimen_Num_Collector) {
	$page_heading = "Detail of Specimen No. $Specimen_Num_Collector";
    } else {
	$page_heading = "Detail of Biocode No. $bnhm_id"; 
    }
    if($batch_id) {
        $specimen_batch_id = $batch_id;
    }
    &print_biocode_header_css($page_heading);

    if (!$bnhm_id) {
	print "<h3>Sorry, no record in the database.  Please try again!<br>\n";
        print "<a href=/biocode/query_specimens.html>Click here</a> to start a new query</h3>\n";
        &print_biocode_footer;
        return;
    } elsif (!$OK2SHOWPRIVATE) {
	print "<h3>Sorry, this record is not available for public access</h3><p><br>";
	&print_biocode_footer;
        return;
    }

    # is there a photo for this specimen?  -- CalPhotos lookup
    $pic_count = 0;
    $query = "select disknum, imgnum, photographer, copyright from img where specimen_no = '$bnhm_id' and museum = 'Moorea Biocode'";
    $tmp = &get_multiple_records($query,"image");

    if(-s "$tmp_dir/$tmp") {
        open(FH, "$tmp_dir/$tmp") || die "Can't open photo tmp file $tmp ";
        while ($pic = <FH>) {
            ($disknum, $imgnum, $photographer, $copyright) = split(/\t/,$pic);
            ($a, $b, $mmyy) = split(/\s/,$disknum);
            $pic_count++;
            $copyright = "$photographer &copy $copyright";


            $picfile = "$calphotos_thumb_dir/$mmyy/$imgnum".".jpeg";
            $picurl = "$calphotos_thumb_path/$mmyy/$imgnum".".jpeg";

            if (-e $picfile) {
                $piclink= "<img src=\"$picurl\" border=0>";
            }
        }
        close(FH);
    }

    # HERE
    # is there a photo for this specimen?  -- PhotoMatcher lookup

    $photomatcher_pic_count = 0;

    if($Specimen_Num_Collector) {
        $photomatcher_query = "select b.photographer, b.directory, b.picturename ";
        $photomatcher_query .= "from photomatch as p, bulkphoto as b where p.SpecimenNumCollector = '$Specimen_Num_Collector' ";
        $photomatcher_query .= "and p.bulkphoto_id = b.bulkphoto_id and p.calphotos_location is null";

        $tmp = &get_multiple_records($photomatcher_query,"biocode");
        if(-s "$tmp_dir/$tmp") {
            open(FH, "$tmp_dir/$tmp") || die "Can't open photo tmp file $tmp ";
            while ($pic = <FH>) {
                ($photomatcher_photographer, $directory, $picturename) = split(/\t/,$pic);
    
                $photomatcher_pic_count++;
                $photomatcher_copyright = "$photomatcher_photographer &copy Moorea Biocode";


                $photomatcher_picfile = "$photomatcher_thumb_dir/$directory/calthumbs/$picturename";
                $photomatcher_picurl = "$photomatcher_img_path/$directory/calthumbs/$picturename";

                if ($photomatcher_picfile) {
                    $photomatcher_piclink= "<img src=\"$photomatcher_picurl\" border=0>";
                }
            }
            close(FH);
        }
    }




    print "<table width=100%>";
    print "<tr>";
    print "<td>";

    print "<table cellspacing=3 width=100%>";

    print "<tr><td align=right><b>Scientific Name</b></td>";
    print "<td>";
    if($ScientificName) {
        # print "    <font size=+1><b><i><a href=/cgi/biocode_species_query?genus=$Genus&species=$SpecificEpithet&subspecies=$SubspecificEpithet&step=detail>$ScientificName</a></i></b></font>";
        # print "    <font size=+1><b><i><a href=/cgi/biocode_species_query?bnhm_id=$bnhm_id&step=detail>$ScientificName</a></i></b></font>";  # changed July 2010
        print "    <font size=+1><b><i><a href=/cgi/biocode_species_query?bnhm_id=$bnhm_id&step=detail>$Genus $Taxon_Certainty $SpecificEpithet $SubspecificEpithet</a></i></b></font>";  # changed Feb 28 2012
        if ($ScientificNameAuthor) {
            # $ScientificNameAuthor =~ s/[\(|\)]//g;
            print "&nbsp;&nbsp;$ScientificNameAuthor";
        }
    } else {
	print "Unknown";
    }
    print "    </td>";
    print "</tr>\n";


    print "<tr>";
    print "<td align=right valign=top width=20%>";  # force field names to expand
    print "<b>Specimen No.</b></td>";
    print "<td>$Specimen_Num_Collector";
    print "</td>\n";
    print "</tr>\n";

    print "<tr><td align=right>";
    print "<b>Biocode No.</b></td><td>$bnhm_id";
    print "</td>\n";
    print "</tr>\n";

    print "<tr><td align=right>";
    print "<b>Institution</b></td>";
    print "<td>\n";
    print "$HoldingInstitution ";

    if ($VoucherCatalogNumber) {
        if($Voucher_URI) {
	    print " [Link to voucher: <a href='$Voucher_URI'>";
        } else {
            print " [Voucher catalog number: ";
        }
	print "$VoucherCatalogNumber";
        if($Voucher_URI) {
	    print "</a>]";
        } else {
	    print "]";
        }
	print "</td>\n";
	print "</tr>\n";
    }


    print "</td>\n";
    print "</tr>\n";
    

    if ($parent_record) {
        print "<tr><td align=right>";
        print "<b>Parent Record</b></td>";
        print "<td>\n";
        print "<a href=/cgi/biocode_query?bnhm_id=$parent_record&one=T>$parent_record</a>";
        print "</td>\n";
        print "</tr>\n";
    }
    # is this a parent record?
    if ($child_exists) {
	$children = &get_count("biocode","parent_record='$bnhm_id'");
	print "<tr><td align=right>";
        print "<b>Child Records</b></td>";
        print "<td>\n";
        print "View <a href=/cgi/biocode_query?where-parent_record=$bnhm_id&OK2SHOWPRIVATE=$OK2SHOWPRIVATE>$children ";
	if ($children == 1) {
	    print "specimen record</a>";
	} else {
	    print "specimen records</a>";
	}
	print " created from this one";
        print "</td>\n";
        print "</tr>\n";
    }
    


    if ($RelatedCatalogItem) {
        print "<tr><td align=right>";
        print "<b>Related Catalog Item</b></td>";
        print "<td>\n";
        print "$RelatedCatalogItem";
        print "</td>\n";
        print "</tr>\n";
    }


    ### Collecting Event
    print "<tr><td align=right>";
    print "<b>Biocode&nbsp;Event&nbsp;ID</b></td>";
    print "<td>\n";
    print "<a href=/cgi/biocode_collect_event_query?table=biocode_collecting_event&EventID=$Coll_EventID&one=T&OK2SHOWPRIVATE=1>$Coll_EventID</a>";
    print "</td>\n";
    print "</tr>\n";

    if ($Coll_EventID_collector) {
	print "<tr><td align=right>";
	print "<b>Collector's&nbsp;Event&nbsp;ID</b></td>";
	print "<td>\n";
	print "$Coll_EventID_collector";
	print "</td>\n";
	print "</tr>\n";
    }

    if ($print_OtherEventID) {
	### get OtherEventID from collecting even table, if any 
	$query = "select OtherEventID from biocode_collecting_event where EventID = '$Coll_EventID'";
	($OtherEventID) = &get_one_record($query,"biocode");
	if ($OtherEventID) {
	    print "<tr><td align=right>";
	    print "<b>Other Event ID</b></td>";
	    print "<td>\n";
	    print "$OtherEventID";
	    print "</td>\n";
	    print "</tr>\n";
	}
    }


    print "<tr><td colspan=2><br></td></tr>\n";

    if ($ColloquialName) {
	print "<tr><td align=right><b>Common Name</b></td>";
	print "    <td>$ColloquialName<br>";
	print "    </td>";
	print "</tr>\n";
    }

    ## Collectors
    $coll_query = "/cgi/biocode_people_query?table=biocode_people&one=T&name_full";
    @Collecters = split(/\,/,$Collector_List);

    if (!$Collector_List && ($MonthCollected || $YearCollected || $TimeofDay) ) {
	print "<tr><td align=right><b>Collected</b></td>";
    } else {
	print "<tr><td align=right><b>Collected by</b></td>";
    }
    $coll_list = "";
    print "    <td>";
    foreach $c (@Collecters) {
	$c_url = &strip($c);
	$c_url =~ s/ /\+/g;
	$coll_list .= "<nobr><a href=$coll_query=$c_url>$c</a></nobr> & \n";
    }
    $coll_list =~ s/\& $//g;
    print "$coll_list";

    if ($MonthCollected || $YearCollected || $TimeofDay) {
	$coll_date = &make_pretty_date3($MonthCollected,$DayCollected,$YearCollected);
	
	if ($Collector_List) {
	    print "&nbsp;&nbsp;(";
	}
	print "$coll_date";
	if ($TimeofDay) {
	    print "; $TimeofDay";
	    if ($TimeofDay2) {
	        print " - $TimeofDay2";
            }
	}
	if ($Collector_List) {
	    print ")";
	}
	print "</td></tr>\n";
    }
    print "</tr>\n";

    print "<tr><td valign=top align=right><b>Location</b></td>";
    print "    <td>";
    &print_specimen_detail_loc;
    print "    </td>";
    print "</tr>\n";

    if($Habitat) {
        print "<tr><td align=right><b>Habitat</b></td>";
        print "    <td>$Habitat</td>";
        print "</tr>\n";
    }

    if($specimen_Habitat) {
        print "<tr><td align=right><b>Specimen Habitat</b></td>";
        print "    <td>$specimen_Habitat</td>";
        print "</tr>\n";
    }

    if($MicroHabitat) {
        print "<tr><td align=right><b>Microhabitat</b></td>";
        print "    <td>$MicroHabitat</td>";
        print "</tr>\n";
    }

    if($specimen_MicroHabitat) {
        print "<tr><td align=right><b>Specimen Microhabitat</b></td>";
        print "    <td>$specimen_MicroHabitat</td>";
        print "</tr>\n";
    }

    if($Associated_Taxon) {
        print "<tr><td align=right><b>Associated Taxon</b></td>";
        print "    <td>$Associated_Taxon</td>";
        print "</tr>\n";
    }

    if($MorphoSpecies_Match) {
        print "<tr><td align=right><b>Morpho Species Match</b></td>";
        print "    <td>$MorphoSpecies_Match";
        print "    </td>";
        print "</tr>\n";
    }

    if($MorphoSpecies_Description) {
        print "<tr><td align=right><b>Morpho Species Description</b></td>";
        print "    <td>$MorphoSpecies_Description";
        print "    </td>";
        print "</tr>\n";
    }

    print "<tr><td align=right>";
    if($IdentifiedBy || $IdentifiedInstitution) {
        print "<b>Identified by</b></td>";
    } elsif($YearIdentified) {
        print "<b>Identified</b></td>";
    }
    print "    <td>";
    if($IdentifiedBy) {
        print "$IdentifiedBy &nbsp;&nbsp;";
    }
    if($IdentifiedInstitution) {
        print "&nbsp;&nbsp;$IdentifiedInstitution &nbsp;&nbsp;";
    }

    if ($YearIdentified) {
	$id_date = &strip(&make_pretty_date3($MonthIdentified,$DayIdentified,$YearIdentified));
	print "($id_date)";
    }
    print "    </td>";
    print "</tr>\n";

    if($DNASequenceNo) {
        if($DNASequenceNo eq "P") {
            $DNASequenceNo = "P (passed)";
        } elsif($DNASequenceNo eq "F") {
            $DNASequenceNo = "F (failed)";
        } elsif($DNASequenceNo eq "F") {
            $DNASequenceNo = "Q (queue)";
        }
        print "    <tr><td align=right><b>COI Sequence Status</b></td>  <td>$DNASequenceNo<br></td></tr>";
    }
    if($BasisOfID) {
        print "<tr><td align=right><b>Basis of ID</b></td>";
        print "    <td>$BasisOfID";
        print "    </td>";
        print "</tr>\n";
    }

    if ($PreviousID) {
	print "<tr><td valign=top align=right>";
	print "<b>Previous ID</b></td> <td>$PreviousID</td>";
	print "</tr>\n";
    }

#    print "<tr><td align=right>";
#    print "<b>BioIP</b></td>";
#    print "<td><a href=/mou.pdf>Moorea Biocode MOU</a></td>";
#    print "</tr>\n";

    print "</table>";   

    print "</td>";
    print "<td>";

    ## right side of the page
    if($piclink || $photomatcher_piclink) {
        print "<table border cellpadding=5>";
        print "<tr>";

        if($piclink) {
            print "<td align=center><a href=$imageURL?where-specimen_no=$bnhm_id&where-museum=Moorea+Biocode>$piclink</a><br>";

            if($pic_count == 1) {
                $copyright =~ s/\s/&nbsp;/g;
                print "<small>";
                print "$copyright<br>";
                print "<center>(1 of ";
                print "<a href=$imageURL?where-specimen_no=$bnhm_id&where-museum=Moorea+Biocode>";
                print "$pic_count photo</a>)\n";
                print "<br>[CalPhotos]\n";
                print "</small>";
            } else {
                $copyright =~ s/\s/&nbsp;/g;
                print "<small>";
                print "$copyright<br>";
                print "<center>(1 of ";
                print "<a href=$imageURL?where-specimen_no=$bnhm_id&where-museum=Moorea+Biocode>";
                print "$pic_count photos</a>)\n";
                print "<br>[CalPhotos]\n";
                print "</small>";
            }
            print "</td>";
        }


        if($photomatcher_piclink) {

            $snc4url = $Specimen_Num_Collector;
            $snc4url =~ s/ /+/g;
            print "<td align=center>";
            # print "<a href=/cgi/biocode_img_query?Specimen_Num_Collector=$snc4url>$photomatcher_piclink</a>"; 
            print "<a href=/photomanager/photomatch.htm?specimen=$snc4url>$photomatcher_piclink</a>"; # link fixed Aug 2012 - jg; was going to CP
            print "<br>";

            if($photomatcher_pic_count == 1) {
                $photomatcher_copyright =~ s/\s/&nbsp;/g;
                print "<small>";
                print "$photomatcher_copyright<br>";
                print "<center>(1 of ";
                # print "<a href=/cgi/biocode_img_query?Specimen_Num_Collector=$snc4url>";
                print "<a href=/photomanager/photomatch.htm?specimen=$snc4url>";
                print "$photomatcher_pic_count photo</a>)\n";
                print "<br>[Biocode PhotoManager]\n";
                print "</small>";
            } else {
                $photomatcher_copyright =~ s/\s/&nbsp;/g;
                print "<small>";
                print "$photomatcher_copyright<br>";
                print "<center>(1 of ";
                # print "<a href=/cgi/biocode_img_query?Specimen_Num_Collector=$snc4url>";
                print "<a href=/photomanager/photomatch.htm?specimen=$snc4url>";
                print "$photomatcher_pic_count photos</a>)\n";
                print "<br>[Biocode PhotoManager]\n";
                print "</small>";

            }
            print "</td>";
        }



        print "</tr>\n";
        print "</table>";
    }

    print "</td>";
    print "</tr>";
    print "</table>";

    ## end of top section

    print "<table cellpadding=2 cellspacing=2 width=100%>";
    print "<tr><td colspan=3><hr></td></tr>\n";
    print "<tr>";

    ## left side
    print "<td valign=top>";
    print "<table cellspacing=3>";
    print "    <tr><td align=right><b>Phylum</b></td>  <td>$Phylum<br></td></tr>";
    if($Subphylum) {
        print "    <tr><td align=right><b>Subphylum</b></td>  <td>$Subphylum<br></td></tr>";
    }
    if($Superclass) {
        print "    <tr><td align=right><b>Superclass</b></td>  <td>$Superclass<br></td></tr>";
    }
    print "    <tr><td align=right><b>Class</b></td>  <td>$Class<br></td></tr>";
    if($Subclass) {
        print "    <tr><td align=right><b>Subclass</b></td>  <td>$Subclass<br></td></tr>";
    }
    if($Infraclass) {
        print "    <tr><td align=right><b>Infraclass</b></td>  <td>$Infraclass<br></td></tr>";
    }
    if($Superorder) {
        print "    <tr><td align=right><b>Superorder</b></td>  <td>$Superorder<br></td></tr>";
    }
    print "    <tr><td align=right><b>Order</b></td>  <td>$Ordr<br></td></tr>";
    if($Suborder) {
        print "    <tr><td align=right><b>Suborder</b></td>  <td>$Suborder<br></td></tr>";
    }
    if($Infraorder) {
        print "    <tr><td align=right><b>Infraorder</b></td>  <td>$Infraorder<br></td></tr>";
    }
    if($Superfamily) {
        print "    <tr><td align=right><b>Superfamily</b></td>  <td>$Superfamily<br></td></tr>";
    }
    print "    <tr><td align=right><b>Family</b></td>  <td>$Family<br></td></tr>";
    if($Subfamily) {
        print "    <tr><td align=right><b>Subfamily</b></td>  <td>$Subfamily<br></td></tr>";
    }
    if($Tribe) {
        print "    <tr><td align=right><b>Tribe</b></td>  <td>$Tribe<br></td></tr>";
    }
    if($Subtribe) {
        print "    <tr><td align=right><b>Subtribe</b></td>  <td>$Subtribe<br></td></tr>";
    }
    if($Genus) {
        print "    <tr><td align=right><b>Genus</b></td>  <td>$Genus<br></td></tr>";
    }
    if($Subgenus) {
        print "    <tr><td align=right><b>Subgenus</b></td>  <td>$Subgenus<br></td></tr>";
    }
    if($SpecificEpithet) {
        print "    <tr><td align=right><b>Species</b></td>  <td>$SpecificEpithet<br></td></tr>";
    }
    if($SubspecificEpithet) {
        print "    <tr><td align=right><b>Subspecies</b></td>  <td>$SubspecificEpithet<br></td></tr>";
    }
    if($Taxon_Certainty) {
        print "    <tr><td align=right><b>Taxon Certainty</b></td>  <td>$Taxon_Certainty<br></td></tr>";
    }
    if($TypeStatus) {
        print "    <tr><td align=right><b>Type Status</b></td>  <td>$TypeStatus<br></td></tr>";
    }
    if($LowestTaxon) {
        print "    <tr><td align=right><b>Lowest Taxon</b></td>  <td>$LowestTaxon<br> ";
        if($LowestTaxonLevel) {
            print "<small>($LowestTaxonLevel)</small>";
        }
        print "</td></tr>";
    }
    print "</table>";
    print "</td>\n";

    ## right side
    print "<td valign=top>";
    print "<table cellspacing=5>";
    print "    <tr><td align=right><b>Sex/Caste</b></td>  <td>$SexCaste<br></td></tr>";
    print "    <tr><td align=right><b>Life Stage</b></td>  <td>$LifeStage<br></td></tr>";
    print "    <tr><td align=right><b>Parts</b></td>  <td>$Parts<br></td></tr>";
    print "    <tr><td align=right><b>Length</b></td>  <td>$Length $LengthUnits<br></td></tr>";
    print "    <tr><td align=right><b>Weight</b></td>  <td>$Weight $WeightUnits<br></td></tr>";



    print "    <tr><td align=right><b>Individual Count</b></td>  <td>$IndividualCount<br></td></tr>";


    if($RelatedCatalogItem) {
        print "    <tr><td align=right><b>Related Catalog Item</b></td>  <td>$RelatedCatalogItem<br></td></tr>";
    }
    if($VoucherCatalogNumber) {
        print "    <tr><td align=right><b>Voucher Catalog Number</b></td>  <td>$VoucherCatalogNumber<br></td></tr>";
    }
    if($CollectionCode) {
        print "    <tr><td align=right><b>Collection Code</b></td>  <td>$CollectionCode<br></td></tr>";
    }
    print "</table>";

    print "<td valign=top>";
    print "<table cellspacing=5>";

    print "    <tr><td align=right><b>Collecting Method</b></td>  <td>$Collection_Method</td></tr>";

    if($Cultivated) {
	print "    <tr><td align=right><b>Cultivated?</b></td>  <td>yes</td></tr>";
    }

    if($Cultivated) {
        print "    <tr><td align=right><b>Preparation Type</b></td>  <td>$PreparationType</td></tr>";
    }

    if($fixative) {
        print "    <tr><td align=right><b>Fixative</b></td>  <td>$fixative</td></tr>";
    }
    if($preservative) {
        print "    <tr><td align=right><b>Preservative</b></td>  <td>$preservative</td></tr>";
    }

    if($relaxant) {
        print "    <tr><td align=right><b>Relaxant</b></td>  <td>$relaxant</td></tr>";
    }

    print "<tr>\n";
    print "<td>\n";
    print "</td>\n";
    print "</tr>\n";

    print "</table>\n";

    print "</td>\n";
    print "</tr>\n";
    print "</table>\n";

    ## end middle section

    print "<table width=100%>\n";
    print "<tr><td>";
    print "<b>Notes</b>&nbsp;&nbsp; $Notes";
    if ($pic && $pic ne "1") {  # from excel batch upload
	print "<p><b>Photo Notes</b> $pic\n";
    }
    print "</td></tr>\n";

    ## Spatial Information
    print "<tr><td><hr></td></tr>\n";
    print "<tr><td><b>Lat</b>&nbsp;&nbsp;$DecimalLatitude";
    print "&nbsp;&nbsp;\n";
    print "<b>Long</b>&nbsp;&nbsp;$DecimalLongitude";

    if($DecimalLongitude2) {
        print "&nbsp;&nbsp;&nbsp;<b>Lat2</b>&nbsp;&nbsp;$DecimalLatitude2";
        print "&nbsp;&nbsp;\n";
        print "<b>Long2</b>&nbsp;&nbsp;$DecimalLongitude2";
    }

    print "&nbsp;&nbsp;&nbsp;$HorizontalDatum";

    if ($VerbatimLongitude) {
	print "&nbsp;&nbsp;(<i>verbatim lat/long</i>: ";
	print "$VerbatimLatitude / $VerbatimLongitude";
        if ($VerbatimLongitude2) {
	    print " - $VerbatimLatitude2 / $VerbatimLongitude2";
        }
        print ")";
    }
    print "</td></tr>\n";
    if ($MaxErrorInMeters) {
	print "<tr><td><b>Max. Error</b>";
        print "&nbsp;&nbsp;$MaxErrorInMeters m.\n";
        print "</td></tr>\n";
    }

    print "<tr><td><b>Elevation</b>";
    print "&nbsp;&nbsp;\n";
    if ($MinElevationMeters =~ /(\d+)\.0000/) {
	$MinElevationMeters = $1;
    }
    if ($MaxElevationMeters =~ /(\d+)\.0000/) {
	$MaxElevationMeters = $1;
    }
    if ($MinElevationMeters && $MaxElevationMeters) {
	print "$MinElevationMeters " . "-" .  " $MaxElevationMeters m.";
    }
    elsif ($MinElevationMeters) {
	print "$MinElevationMeters m.";
    }

    if ($specimen_ElevationMeters) {
	print "&nbsp;&nbsp;(<i>Specimen Elevation</i>: $specimen_ElevationMeters)";
    }

    print "</td></tr>\n";

    print "<tr><td><b>Depth</b>";
    print "&nbsp;&nbsp;\n";
    if ($MinDepthMeters) {
        print "$MinDepthMeters m.";
    }
    if ($MaxDepthMeters) {
        print " (min) ";
        print "$MaxDepthMeters m. (max) ";
    }
    if ($specimen_MinDepthMeters) {
	print "&nbsp;&nbsp;(<i>Specimen Depth</i>: $specimen_MinDepthMeters m. ";
    }
    if ($specimen_MaxDepthMeters) {
	print "(min) $specimen_MaxDepthMeters m. (max))";
    }
    print "</td></tr>\n";
    print "<tr><td>\n";
    if ($DepthOfBottomMeters) {
	print "<b>Depth of Bottom</b> $DepthOfBottomMeters m";
    }
    print "</td></tr>\n";

    ### get tissue records, if any
    $query = "select * from biocode_tissue where bnhm_id = '$bnhm_id'";
    $tmp = &get_multiple_records($query,"biocode");
    
    if(-s $tmp) {
        print "<tr><td colspan=3><hr></td></tr>\n";
        print "<tr><td colspan=3>";
        open(FH,"$tmp") || die "Can't open tmp file $tmp ";
        while($line = <FH>) {
            $tissue_info = "";
            @row = split(/\t/,$line);
            &fill_fields_with_values("biocode_tissue");
	    $tissue_date = &make_pretty_date3($month,$day,$year);
	    $entry_date = &make_pretty_date2($entry_date);

            # if($tissue_date)        { $tissue_info .= "; $tissue_date <small>(date taken)</small>"; }
            # if($entry_date)         { $tissue_info .= "; $entry_date <small>(date entered)</small>"; }
            # if($person_subsampling) { $tissue_info .= "; $person_subsampling"; }
            # if($container)          { $tissue_info .= "; $container"; }
            # if($preservative)       { $tissue_info .= "; $preservative"; }
            # if($tissuetype)         { $tissue_info .= "; $tissuetype"; }
            # if($format_name96)      { $tissue_info .= "; $format_name96"; }
            # if($well_number96)      { $tissue_info .= "; $well_number96"; }
            # if($molecular_id)       { $tissue_info .= "; $molecular_id"; }
            # if($HoldingInstitution) { $tissue_info .= "; $HoldingInstitution"; }
            # if($OtherCatalogNum)    { $tissue_info .= "; $OtherCatalogNum"; }
            # if($notes)              { $tissue_info .= "; $notes"; }

	    $tid = $bnhm_id . "." . $tissue_num;
            print "<b>Tissue ID</b>:&nbsp;&nbsp;&nbsp;";
	    print "<a href=/cgi/biocode_tissue_query?tid=$tid&one=T>";
	    print "$tid</a>\n";
            if($format_name96) {
	        print "&nbsp;&nbsp;<b>Plate</b>: $format_name96\n";
            }
            if($well_number96) {
	        print "&nbsp;&nbsp;<b>Well Number</b>: $well_number96\n";
            }
	    print "&nbsp;&nbsp;$tissuetype\n";
	    print "&nbsp;&nbsp;$HoldingInstitution\n";

            # print "<a href=/cgi/biocode_add_tissue?mode=update&bnhm_id=$bnhm_id.$tissue_num&entry_by=BSCIT+Staff&password=bscit>$bnhm_id.$tissue_num</a>";
            # print "$tissue_info";
            print "<br>";
        }
        print "</td></tr>\n";
    }

    print "</table>\n";

    ## Verbatim Labels
    if ($VerbatimCollectingLabel|| $VerbatimIDLabel) {
	print "<table width=100%>\n";
	print "<tr><td colspan=3><hr></td></tr>\n";

	if ($VerbatimCollectingLabel  =~ /\;\;/) {  # double semicolons
	    $VerbatimCollectingLabel  =~ s/\;\;/\<br\>/g;
	} elsif ($VerbatimCollectingLabel  =~ /\;/) {  # single semicolons
	    $VerbatimCollectingLabel  =~ s/\;/\<br\>/g; 
	} elsif ($VerbatimCollectingLabel  =~ /\, /) {  # commas
	    $VerbatimCollectingLabel  =~ s/\,/\<br\>/g;
	}
	if ($VerbatimIDLabel =~ /\;\;/) {  # double semicolons
	    $VerbatimIDLabel  =~ s/\;\;/\<br\>/g;
	} elsif ($VerbatimIDLabel =~ /\;/) {  
	    $VerbatimIDLabel =~ s/\;/\<br\>/g;  # single semicolon
	} elsif ($VerbatimIDLabel  =~ /\, /) {  # comma followed by a space
            $VerbatimIDLabel  =~ s/\,/\<br\>/g;
	    
        }
	print "<tr>";

	if ($VerbatimCollectingLabel) {
	    print "    <td valign=top width=50%><b>Verbatim Collecting Label</b><p>";
	    print "        <table border cellspacing=5 cellpadding=10><tr><td>";
	    print "$VerbatimCollectingLabel";
	    print "        <br></td></tr></table>\n";
	    print "    </td>";
	}
	if ($VerbatimIDLabel) {
	    print "    <td valign=top width=50%><b>Verbatim ID Label</b><p>";
	    print "        <table border cellspacing=5 cellpadding=10><tr><td>";
	    print "             $VerbatimIDLabel";
	    print "        <br></td></tr></table>\n";
	    print "    </td>";
	}
	print "</tr>\n";

	print "</table>";	
	print "<br>\n";
    }
    if ($CollectingLabelNotes) {
	print "<table width=100% cellspacing=5>\n";
        print "<tr><td>";
        print "<b>Collecting Label Notes</b>&nbsp;&nbsp; $CollectingLabelNotes</td>";
        print "</tr>\n";
	print "</table>";
	print "<br>\n";
    }


    ## submitted by
    print "<table width=100% cellspacing=5>\n";
    print "<tr><td>\n";
    
    print "<br><small><i>Record submitted $DateFirstEntered by $EnteredBy</i></small>\n";
    if ($DateLastModified) {
	print "<br><small><i>Last modified $DateLastModified";
	if ($ModifiedBy) {
	    print " by $ModifiedBy";
	}
	if ($ModifyReason) {
	    print " ($ModifyReason)";
	}
	print "</i></small>\n";
    }
    if($specimen_batch_id) {
        print "<br><small><i>Batch ID: $specimen_batch_id</i></small>\n";
    }
    print "    </td>";
    print "</tr>\n";
    print "</table>";

    if ($DEBUG) {
         print "<p>DEBUG_MSG<p>$debug_msg;";
    }
    &print_update_link;
    &print_biocode_footer;
    
}



sub download_biocode_file {
    my ($filename,$downloadformat) = @_;
    my $fields = "";

    if ($input{only} eq "species") {
        foreach $f (@biocode_species_display_schema) {
            $fields .= "$f\t";
        }
    } else {

        if($downloadformat eq "MVZ fields (tab delimited)") {

            foreach my $f (@biocode_download_mvz_schema) {   # TWO
                if($f =~ /\./) {  # remove the biocode & biocode_collecting_event
                    $f = $';
                    my $g = $`;
                    if($g eq "biocode_collecting_event") {
                       $g = "[ce]";
                    } else {
                       $g = "";
                    }
                    $fields .= "$f$g\t";
                }
            }
        } else {
            foreach my $f (@biocode_download_schema) {          # TWO
                if($f =~ /\./) {  # remove the biocode & biocode_collecting_event
                    $f = $';
                    my $g = $`;
                    if($g eq "biocode_collecting_event") {
                       $g = "[ce]";
                    } else {
                       $g = "";
                    }
                    if($f =~ /namesoup/) {
                        # ignore it
                    } else {
                        $fields .= "$f$g\t";
                    }
                }
            }
        }
    }


    print "Content-type: text/text\n\n";

    print "$fields\n\n";

    if($filename !~ /$one_up_tmp_file_location/) {  # don't know what this is for ...  (July 2008 note .. jg)
        $filename = "$tmp_file_location/$script_name/$filename";
    }
    open(FH, "$filename")
        || die "Can't open $filename' file for reading";
    while(<FH>) {
	$foo = "$_";
        chomp($foo);
        if ($input{only} eq "species") {             # jg added for biocode ... advanced download doesn't work
            # print "$foo";    # prints some extra fields at end .. bleh
            ($a,$b,$c,$d,$e,$f,$g,$h,$i,$j,$k,$l,$m,$n,$o) = split(/\t/,$foo);
            print "$a\t$b\t$c\t$d\t$e\t$f\t$g\t$h\t$i\t$j\t$k\t$l\t$m\t$n\n";
        } else {
# HERE
            @row = split(/\t/,$foo);
            if($downloadformat eq "MVZ fields (tab delimited)") {
                &fill_fields_with_values("biocode_download_mvz");   # THREE
                foreach $f (@biocode_download_mvz_schema) {         # FOUR
                    print "${$f}\t";
                }
            } else {
                &fill_fields_with_values("biocode_download");   # THREE
                foreach $f (@biocode_download_schema) {         # FOUR
                    if($f !~ /namesoup/) {
                        print "${$f}\t";
                    }
                }
            }

            print "\n";
        }
    }
}



sub get_simple_selectlist {
    $selectlist = "";
    foreach $e (@biocode_simple_display_join_schema) {
	$selectlist .= "$e, ";
    }
    $selectlist =~ s/,\s*$//g;
    return $selectlist;
}



sub print_photo_for_detail {


    ## first make sure there really are photos in CalPhotos
    $num_spec_pics = &get_count("img","specimen_no='$dc_cat_num'");
    if ($num_spec_pics) {
	print "<td align=center valign=top>";
	($one,$two,$three,$four) = split(/ /,$pic);
	$path = &get_path("$one $two $three",$four);
	$tnail_url = "/imgs/128x192/$path";
	$enl_kwid = $pic;
	$enl_kwid =~ s/ /\+/g;
	#print "<a href=/cgi/biocode_img_query?enlarge=$enl_kwid>\n";
	print "<a href=$imageURL?enlarge=$enl_kwid>\n";
	print "<img border=0 ";
	print "src=$tnail_url alt=\"click for enlargement\"></a>\n";

	print "<br>1 of ";
	#print "<a href=/cgi/biocode_img_query?where-specimen_no=$dc_cat_num>$num_spec_pics</a>";
	print "<a href=$imageURL?where-specimen_no=$dc_cat_num>$num_spec_pics</a>";
	print "<br><small>click on image to view enlargement</small>";
	print "</td>\n";
    }
}


sub get_bnhm_mapper_url {

    my ($url);

    $xml = $bm_specimen_xml_file;

    ## note:  label=1 turns political labels on

    # $url = "http://bnhmmaps.berkeley.edu/index.php?ViewResults=tab&tabfile=$bm_specimen_tabfile/tmpfiles/$tmp&configfile=$xml&sourcename=Moorea+Biocode+specimen+query&biocode=true&label=1";
    $url = "http://bnhmmaps.berkeley.edu/index.php?ViewResults=tab&maptype=Satellite&tabfile=$bm_specimen_tabfile/$tmp&configfile=$xml&sourcename=Moorea+Biocode+specimen+query&biocode=true&label=1";

    return $url;

}


sub print_update_link {

    print "<table width=100% border>\n";
    print "<tr>\n";
    print "<td align=center>\n";
    print "<small><nobr>";
    $prev_catalognum = $CatalogNumberNumeric -1;
    $prev_catid = $ProjectCode . $prev_catalognum;
    $prev_catid =~ s/ //g;

    $next_catalognum = $CatalogNumberNumeric +1;
    $next_catid = $ProjectCode . $next_catalognum;
    $next_catid =~ s/ //g;

    print "<a href=/cgi/biocode_query?bnhm_id=$prev_catid&one=T&OK2SHOWPRIVATE=1>";
    print "<<&nbsp;Prev&nbsp;[$prev_catid]</a>\n";
    print "&nbsp;&nbsp;&nbsp;&nbsp;";
    print "<a href=/cgi/biocode_query?bnhm_id=$next_catid&one=T&OK2SHOWPRIVATE=1>";
    print "Next&nbsp;[$next_catid]&nbsp;>></a>\n";
    print "</nobr></td>\n";

    print "<td align=left>\n";
    print "<FORM ACTION=\"/cgi/biocode_add_specimens\" METHOD=post>\n";
    print "<INPUT type=hidden name=special value=firstscreen>\n";
    print "<input type=hidden name=bnhm_id value=\"$bnhm_id\">\n";
    print "<input type=hidden name=Coll_EventID value=\"$Coll_EventID\">\n";

    # for cloned records (mode=clone)
    $cloned_row = "";
    foreach $el (@row2clone) {  # entire row from detail page
        $cloned_row .= "$el|";
    }

    print "<input type=hidden name=row value=\"$cloned_row\">\n";
    print "<small><b>Administrative action on this record?</b> (choose one)<br> \n";
    ## print Update
    print "<small><input type=radio name=mode value=update>\n";
    print "Correct this record ";

    ## print Clone 
    print "&nbsp;\n";
    print "<input type=radio name=mode value=clone>\n";
    print "Create a new record from this one";

    ## add to Essig
    print "&nbsp;\n";
    print "<input type=radio name=mode value=load2essig>\n";
    print "Copy this record to Essig";

    ## Name and Password
    print "<p>Name:&nbsp;\n";
    print "<select size=1 name=entry_by>\n";
    print "<option selected>\n";
    $submitter_list = "$select_list_path/submitters.txt";
    open (S,$submitter_list);
    while ($line = <S>) {
	print $line;
    }
    close(S);
    print "</select>\n";
    print "Password:&nbsp;\n";
    print "<input size=5 name=password type=password>\n";
    print "<input type=submit value=go>\n";
    print "</FORM>\n";
    print "</small></td></tr>\n";
    print "</table>\n";

}


sub print_species_list {

    $searchstring = $whereclause;

    ## stuff for download button
    $dwhere = &strip($searchstring);
    $dwhere =~ s/\"//g;  # county="county=San Diego" ->county=San Diego
    $dwhere =~ s/ /\+/g;

# commented this out March 18, 2010 -- is broken
#    if ($download_on) {
#        $url_downloadformat = $input{downloadformat};
#        $url_downloadformat =~ s/\s/\+/g;
#
#	$filesize = sprintf("%.1f",(-s $query_results) / 1000);
#	print "<p><li><a href=/cgi/biocode_query?download=$query_results&action=simple&downloadformat=$url_downloadformat";
#        if($input{only} eq "species") {
#	    print "&table=biocode&num=$num_matches&whereclause=$dwhere&stat=DOWNLOAD&only=species>Download your results</a> ";
#        } else {
#	    print "&table=biocode&num=$num_matches&whereclause=$dwhere&stat=DOWNLOAD>Download your results</a> ";
#        }
#	print " (tab-delimited text file, file size = $filesize K)<p>";
#    }


    $query_to_display = "SELECT FROM biocode $whereclause $groupclause $orderclause"; # 5/23/05

# HERE
    $join = "jointables=biocode_collecting_event,biocode&joincolumns=biocode.Coll_EventID+=+biocode_collecting_event.EventID";

    
    print "<p><small><i>Click on species name to see ";
    print "all specimen records for that species</i></small><br>\n";
    print "<table border>";
    print "<TR>";
    print "<th><small>Kingdom</th>\n";
    print "<th><small>Phylum</th>\n";
    print "<th><small>Class</th>\n";
    print "<th><small>Subclass</th>\n";
    print "<th><small>Order</th>\n";
    print "<th><small>Suborder</th>\n";
    print "<th><small>Family</th>\n";
    print "<th><small>Subfamily</th>\n";
    print "<th><small>Tribe</th>\n";
    print "<th><small>Scientific Name</th>\n";

    open(FH, "$query_results") || die "Can't open tmp file for reading";
    local($count) = 0;
    $private_count = 0;

    while(<FH>) {
	
        if(($count < ($row_to_start + $max_rows)) && ($count >= $row_to_start)) {

            @row = split(/\t/,$_);
	    &fill_fields_with_values("biocode_species_display");
	    
	    if ($PublicAccess eq "no") {
		$some_private_records = 1;
		if ($OK2SHOWPRIVATE) {
		    # proceed
		} else {
		    $private_count++;
		    next;
		}
	    }

	    $scientific_name = "$Genus $SpecificEpithet $SubspecificEpithet";
            if($Genus) {   # if there is any scientific name at all, there has to be a genus
                $sciname_url = $scientific_name;
                $sciname_url = &strip($scientific_name);
                $sciname_url =~ s/ /\+/g;
            } else {
                $sciname_url = "NULL";
            }

            # $link_to_specimens = "/cgi/biocode_query?table=biocode&";
            $link_to_specimens = "/cgi/biocode_query?$join&";
            $link_to_specimens .= "where-biocode.ScientificName=$sciname_url";
            if($Tribe) {
                $link_to_specimens .= "&where-biocode.Tribe=$Tribe";
            } else {
                $link_to_specimens .= "&where-biocode.Tribe=NULL";
            }
            if($Subfamily) {
                $link_to_specimens .= "&where-biocode.Subfamily=$Subfamily";
            } else {
                $link_to_specimens .= "&where-biocode.Subfamily=NULL";
            }
            if($Family) {
                $link_to_specimens .= "&where-biocode.Family=$Family";
            } else {
                $link_to_specimens .= "&where-biocode.Family=NULL";
            }
            if($Suborder) {
                $link_to_specimens .= "&where-biocode.Suborder=$Suborder";
            } else {
                $link_to_specimens .= "&where-biocode.Suborder=NULL";
            }
            if($Ordr) {
                $link_to_specimens .= "&where-biocode.Ordr=$Ordr";
            } else {
                $link_to_specimens .= "&where-biocode.Ordr=NULL";
            }
            if($Subclass) {
                $link_to_specimens .= "&where-biocode.Subclass=$Subclass";
            } else {
                $link_to_specimens .= "&where-biocode.Subclass=NULL";
            }
            if($Class) {
                $link_to_specimens .= "&where-biocode.Class=$Class";
            } else {
                $link_to_specimens .= "&where-biocode.Class=NULL";
            }
            if($Phylum) {
                $link_to_specimens .= "&where-biocode.Phylum=$Phylum";
            } else {
                $link_to_specimens .= "&where-biocode.Phylum=NULL";
            }
            if($Kingdom) {
                $link_to_specimens .= "&where-biocode.Kingdom=$Kingdom";
            } else {
                $link_to_specimens .= "&where-biocode.Kingdom=NULL";
            }

            $link_to_specimens = &strip($link_to_specimens);
	    $link_to_specimens =~ s/ /\+/g;


	    print "<tr>\n";
	    print "<td>$Kingdom<br></td>\n";
	    print "<td>$Phylum<br></td>\n";
	    print "<td>$Class<br></td>\n";
	    print "<td>$Subclass<br></td>\n";
	    print "<td>$Ordr<br></td>\n";
	    print "<td>$Suborder<br></td>\n";
	    print "<td>$Family<br></td>\n";
	    print "<td>$Subfamily<br></td>\n";
	    print "<td>$Tribe<br></td>\n";
	    print "<td>";
            if($Genus) {
                print "<a href=$link_to_specimens>$scientific_name</a><br>";
            } else {
                print "<small><font color=grey>[<a href=$link_to_specimens><font color=grey>specimens</a>]</small><br>";
            }
            print "</td>\n";
	    
	}

	print "</tr>";
        $count++;
    }
    close(FH);
    print "</table>";

    print "<p>";

    &print_page_button;

    # print "<P>query: $query</p>";
    &print_biocode_footer;
}


sub do_download_query {

    my ($downloadformat) = @_;
    my $download_selectlist = "";
    my $download_query = "";

    if($downloadformat eq "MVZ fields (tab delimited)") {    # ONE
        foreach my $f (@biocode_download_mvz_schema) {
            $download_selectlist .= "$f, ";
        }
        $download_selectlist =~ s/,\s*$/ /g;
    } elsif($downloadformat eq "SI-EMU (Excel)") {
        foreach my $f (@biocode_download_si_emu_schema) {
            $download_selectlist .= "$f, ";
        }
        $download_selectlist =~ s/,\s*$/ /g;

    } elsif($downloadformat eq "Biocode Excel Bulk Upload") {
        foreach my $f (@biocode_download_excel_collecting_event_schema) {
            $download_selectlist_collecting_event .= "$f, ";
        }
        foreach my $f (@biocode_download_excel_specimen_schema) {
            $download_selectlist_specimen .= "$f, ";
        }
        $download_selectlist_collecting_event =~ s/,\s*$/ /g;
        $download_selectlist_specimen =~ s/,\s*$/ /g;

    } else {
        foreach my $f (@biocode_download_schema) {
            $download_selectlist .= "$f, ";
        }
        $download_selectlist =~ s/,\s*$/ /g;
    }


    if($downloadformat eq "Biocode Excel Bulk Upload") {
        $download_query  = "select $download_selectlist_specimen from biocode_collecting_event, ";
        $download_query .= "(biocode left join biocode_tissue on biocode_tissue.bnhm_id = biocode.bnhm_id) $whereclause group by biocode.bnhm_id ";

        $download_query2  = "select $download_selectlist_collecting_event from biocode_collecting_event, ";
        $download_query2 .= "(biocode left join biocode_tissue on biocode_tissue.bnhm_id = biocode.bnhm_id) $whereclause group by biocode_collecting_event.EventID ";

    } else {

        $download_query  = "select $download_selectlist from biocode_collecting_event, ";
        $download_query .= "(biocode left join biocode_tissue on biocode_tissue.bnhm_id = biocode.bnhm_id) $whereclause group by biocode.bnhm_id ";

    }

    # print "Content-type: text/html\n\n";
    # print "download query: $download_query<p>";
    # print "download query2: $download_query2<p>";

    $download_tmp = &get_multiple_records($download_query,"biocode");  # for specimen sheet
    if($downloadformat eq "Biocode Excel Bulk Upload") {
        $download_tmp2 = &get_multiple_records($download_query2,"biocode");  # for collecting event sheet
    }

    if($input{downloadformat} eq "MVZ fields (tab delimited)" || $input{downloadformat} eq "all fields (tab delimited)") {
        $tissue_tmp = &download_tissue_fields_tab_delimited_format($download_tmp,$input{downloadformat});
    } elsif($input{downloadformat} eq "Biocode Excel Bulk Upload") {
        $tissue_tmp = &download_tissue_fields_excel_format($download_tmp,$input{downloadformat});
    }

    if($input{downloadformat} eq "Biocode Excel Bulk Upload") {
        $biocode_excel_file = &excel_bulk_loader_download($download_tmp,$download_tmp2);   # pass the name of the file with the data, which will get rewritten to Excel
    }

    if($input{downloadformat} eq "SI-EMU (Excel)") {
        $biocode_excel_file = &excel_si_emu_download($download_tmp);   # pass the name of the file with the data, which will get rewritten to Excel
    }
}



sub excel_si_emu_download {
    my ($filename) = @_;
    my $excel = $filename."_biocode.xls"; # for returning
    my $excel_filename = $tmp_file_location."/biocode_query/".$filename."_biocode.xls";

    my $datafile = $tmp_file_location."/biocode_query/".$filename;

    my $rowcount;
    my $colcount;
    my $spec_colcount;

    # Create a new Excel workbook
    my $workbook = Spreadsheet::WriteExcel->new($excel_filename);

    # Add some worksheets
    my $specimens = $workbook->add_worksheet('Field Cataloging');

    # Add a Format
    my $format = $workbook->add_format();
    $format->set_bold();

    # Print column heading to Field Cataloging sheet
    my $f = "";
    $colcount = 0;
    foreach $f (@biocode_download_si_emu_schema) {  
        if($f =~ /\./) {  # remove the biocode & biocode_collecting_event
            $field = $';
            $specimens->write(0, $colcount, $field, $format);
            $colcount++;
        }
    }

    # Print data from query to Excel file 
    
    $rowcount = 1;
    $colcount = 0;

    open(FH,"$datafile") || die "Can't open data file $datafile ";

    while(<FH>) {
        my $line = $_;
        chomp($line);
        my @row = split(/\t/,$line);
        foreach my $r (@row) {
            $specimens->write($rowcount, $colcount, $r);
            $colcount++;
        }
        $rowcount++;
        $colcount = 0;
    }
    close(FH);

    return "$excel";

}


sub excel_bulk_loader_download {

    my ($filename,$filename2) = @_;
    my $excel = $filename."_biocode.xls"; # for returning
    my $excel_filename = $tmp_file_location."/biocode_query/".$filename."_biocode.xls";

    my $datafile = $tmp_file_location."/biocode_query/".$filename;
    my $datafile2 = $tmp_file_location."/biocode_query/".$filename2;

    my $rowcount;
    my $colcount;
    my $spec_colcount;

    # Create a new Excel workbook
    my $workbook = Spreadsheet::WriteExcel->new($excel_filename);

    # Add some worksheets
    my $collecting_events = $workbook->add_worksheet('Collecting_Events');
    my $specimens = $workbook->add_worksheet('Specimens');

    # Add a Format
    my $format = $workbook->add_format();
    $format->set_bold();


    # Print column heading to Collecting_Events sheet
    my $f = "";
    $colcount = 0;
    # foreach $f (@biocode_download_excel_schema) {  
    foreach $f (@biocode_download_excel_collecting_event_schema) {  
        if($f =~ /\./) {  # remove the biocode & biocode_collecting_event
            $field = $';
            my $table = $`;
            if($table eq "biocode_collecting_event") {
                $collecting_events->write(0, $colcount, $field, $format);
                $colcount++;
            }
        }
    }


    # Print column heading to Specimens sheet
    $specimens->write(0, 0, "Coll_EventID_collector", $format);
    $colcount = 1;
    # foreach $f (@biocode_download_excel_schema) {  
    foreach $f (@biocode_download_excel_specimen_schema) {  
        if($f =~ /\./) {  # remove the biocode & biocode_collecting_event
            $field = $';
            my $table = $`;
            if($table eq "biocode") {
                $specimens->write(0, $colcount, $field, $format);
                $colcount++;
            }
        }
    }



    # Print data from query to Excel file (Collecting_Events sheet)
    
    $rowcount = 1;
    $colcount = 0;

    open(FH,"$datafile2") || die "Can't open data file $datafile2 ";

    while(<FH>) {
        my $line = $_;
        chomp($line);
        my @row = split(/\t/,$line);
        foreach my $r (@row) {
            $collecting_events->write($rowcount, $colcount, $r);
            $colcount++;
        }
        $rowcount++;
        $colcount = 0;
    }
    close(FH);



    # Print data from query to Excel file (Specimens sheet)


    $rowcount = 1;
    $colcount = 0;

    open(FH,"$datafile") || die "Can't open data file $datafile ";

    while(<FH>) {
        my $line = $_;
        chomp($line);
        my @row = split(/\t/,$line);
        foreach my $r (@row) {
            $specimens->write($rowcount, $colcount, $r);
            $colcount++;
        }
        $rowcount++;
        $colcount = 0;
    }
    close(FH);



    # Set the active worksheet
    $collecting_events->activate();

    return "$excel";


}


sub download_tissue_fields_tab_delimited_format {
    my ($download_tmp,$downloadformat) = @_;
    my $tissue_tmp = $download_tmp."_2.txt";
    my @bnhm_id_list = ();
    my $bnhm_id = "";
    my $tmp = "";
    my $tissue_field = "";


    open(FH,"$download_tmp") || die "Can't open tmp file $download_tmp ";
    while (<FH>) {
        my $line = $_;
        chomp($line);
        my (@row) = split(/\t/,$line);
        if($downloadformat eq "MVZ fields (tab delimited)") {
            $bnhm_id = $row[78];     # not good, have to change if _schema changes. problem with period in variable name?
        } elsif($downloadformat eq "all fields (tab delimited)")  {
            $bnhm_id = $row[141];    # not good, have to change if _schema changes. problem with period in variable name?
        }
        push(@bnhm_id_list,$bnhm_id);
    }
    close(FH);

    open(OH,">$tissue_tmp") || die "Can't open tmp file $tissue_tmp ";
    foreach $tissue_field (@biocode_tissue_schema) {
        print OH "$tissue_field\t";
    }
    print OH "\n";
    foreach $bnhm_id (@bnhm_id_list) {
        my $select = "select * from biocode_tissue where bnhm_id = '$bnhm_id'";
        $tmp = &get_multiple_records("$select","biocode");
        open(FH,"$tmp") || die "Can't open tmp file $tmp ";
        while (<FH>) {
            my $line = $_;
            chomp($line);
            (@row) = split(/\t/,$line);
            &fill_fields_with_values("biocode_tissue");
            foreach $tissue_field (@biocode_tissue_schema) {
                print OH "${$tissue_field}\t";
            }
            print OH "\n";
        }
        close(FH);
    }
    close(OH);


    return $tissue_tmp;
}



sub download_tissue_fields_excel_format {
    my ($download_tmp,$downloadformat) = @_;
    my $tissue_tmp = "";

#        &fill_fields_with_values("biocode_download_excel");

    return $tissue_tmp;
}



